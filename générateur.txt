Connais-tu le jeu "Ricochet Robot"? Donne moi les règles de ce jeu.


Très bien. Jouons à un jeu : tu es un programmeur en C ++ et tu vas répondre à mes questions en C++. Tu devras bien commenter tes fonctions. Es-tu prêt?


Très bien. Tu vas me coder une fonction qui sélectionne le nombre de joueurs dans ce jeu. La fonction demande le nombre de joueur à l'utilisateur qui entre la valeur


Tu vas maintenant coder la génération du terrain. La génération du terrain est légèrement différente des règles standarts : 
Le plateau de jeu se compose normalement de 4 quart de plateau imprimé sur les 2 faces ce
qui donne 96 façons différentes de poser les plateaux. Nous allons réaliser un générateur de
grilles aléatoires pour nous donner plus de possibilités de grilles que le jeu original, mais en
respectant certaines règles.
je vais te donner les règles générale puis technique pour coder ce terrain

voici les règles générale de génération :
1. Placez les murs autour de la grille, ainsi que les murs qui forment le carré du milieu.
2. Pour la suite de la génération de la carte, nous allons travailler sur chaque quart séparément. Sur chaque quart, placez aléatoirement deux murs extérieurs, un côté vertical
et un côté horizontal.
3. Ajoutez ensuite les murs intérieurs. Sur chaque quart, placez 4 "angles" constitués de
deux murs chacun. Leur placement est aléatoire, cependant faites en sorte qu’un angle
ne puisse ni en toucher un autre, ni toucher un mur extérieur.
4. Une fois avoir avons placé 2 murs extérieurs et 4 "angles" par quart, ajoutez un nouvel
"angle" de deux murs placé dans un des quarts choisi aléatoirement. De cette manière,
on obtient une carte contenant 17 "angles" et 8 murs extérieurs comme sur les grilles
du jeu original.
5. Placez les 4 robots de manière aléatoire. Le choix de la cible (rouge, vert, bleu, jaune ou
multicolore) est fait aléatoirement, son placement est également aléatoire mais forcément dans un angle de deux murs. Il y a au maximum dans une partie 17 cibles (4 de
chaque couleur et 1 multicolore)

voici les règle techniques de génération de la grille :
- la grille est composée de bordures horizontales et verticales. le caractère @ est utilisé pour les bordures verticales et horizontales
- la grille est composée de  2 couches qui alterne pour former des cellules , sans compter les bordures.Après la première bordure horizontale commence la première couche ,puis suit la deusième. 
A la fin de la génération des couches on ajoute la bordure horizontale. De même, avant et après la génération de couches on ajoute @ pour dessiner la bordure verticale
- la première couche est composé de deux éléments qui alternent : les cases et les jointures. Les casers sont représentées par le caractère espace et les jointures par le caractère *
- les murs verticaux sont représentés par | et les murs horizontaux par - 
- les robots et les cibles ne peuvent être placés que sur des cases et remplacent alors le caractère espace par le caractère les correspondants
- une cible rouge est représenté par R et un robot rouge par r
- une cible verte est représenté par V et un robot vert par v
- une cible bleue est représenté par B et un bleue rouge par b
- une cible jaune est représenté par J et un robot rouge par j
- une cible Multicolore est représenté par M

chaque bordure, chaque mur , chaque cases chaque robot, chaque cible doit être suivi par un espace

ajoute aussi la méthode suivante : affichage pour afficher ce terrain

As-tu d'autre questions? Si tu n'en as pas écris la classe


exemple de cartes

@ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @1
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @2
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @3
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @4
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @5
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @6
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @7
@ * * * * * * * * * * * * * * - * - * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   |   *   |   *   *   *   *   *   *   @8
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   |   *   |   *   *   *   *   *   *   @9
@ * * * * * * * * * * * * * * - * - * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @10
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @11
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @12
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @13
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @14
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @15
@ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * @
@   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   @16 
@ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @
  1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16














































écris une fonction qui sélectionne la nouvelle tuile

écris la classe j_ai_trouver : 
- lorsqu'un joueur le souhaite, il écrit son numéro de joueur et le nombre de coup pour lequel il pense pouvoir réussir l'objectif. 
-Cela déclenche un chronomètre d'une minute pendant laquelle les autres joueurs doivent écrire leur numéro avec leur nombre de coup. 
-Au bout d'une minute la fonction se termine et celui qui a le moins de coup est donné en sortie







